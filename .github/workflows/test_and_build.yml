# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, edited]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.title, '[wip]') && !contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.pull_request.title, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.pull_request.title }}"
  # This workflow contains a single job called "build"
  firebase:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version: [12.18.2]
    defaults:
      run:
        working-directory: firebase
    steps:
      - uses: actions/checkout@v1
      - name: docker-compose up
        run: docker-compose up -d
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, test
        run: |
          npm install
          npm test
        env:
          CI: true
  analyze_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.20.x" # you can use 1.20
          channel: "stable"
      - run: flutter pub get
      - name: check format
        run: scripts/check_format.sh
      - run: flutter analyze
      - run: flutter test
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*Analyze, Format and Test Check*"
          mention: "here"
          mention_if: "failure"
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
          url: ${{ secrets.SLACK_WEBHOOK }}
  build-android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: analyze_and_test

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.20.x" # you can use 1.20
          channel: "stable"
      - run: flutter pub get
      - name: prepare google-services.json
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE64 }}
        run: echo $GOOGLE_SERVICES_BASE64 | base64 --decode --ignore-garbage > ${GITHUB_WORKSPACE}/android/app/google-services.json
      - run: flutter build apk
      - name: Distribute android apk
        run: |
          curl \
          -H "Authorization: token ${{secrets.DEPLOYGATE_API_KEY}}" \
          -F "file=@build/app/outputs/flutter-apk/app-release.apk" \
          -F "message=git:${{ github.head_ref }}" \
          -F "distribution_name=${{ github.head_ref }}" \
          -F "release_note=new build" \
          "https://deploygate.com/api/users/${{secrets.DEPLOYGATE_USER}}/apps"
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*Android Build Check*"
          mention: "here"
          mention_if: "failure"
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
          url: ${{ secrets.SLACK_WEBHOOK }}

  build-ios:
    # The type of runner that the job will run on
    runs-on: macos-latest
    needs: analyze_and_test

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.20.x" # you can use 1.20
          channel: "stable"
      - run: flutter pub get
      - name: prepare GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO_BASE64: ${{ secrets.GOOGLE_SERVICE_INFO_BASE64}}
        run: echo $GOOGLE_SERVICE_INFO_BASE64 | base64 --decode > ${GITHUB_WORKSPACE}/ios/Runner/GoogleService-Info.plist
      - name: Cache CocoaPods files
        id: cache-cocoapods
        uses: actions/cache@preview
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: after Cache
        run: echo "-->${{steps.cache-cocoapods.outputs.cache-hit}}<--"
      - name: flutter clean
        run: flutter clean
      - run: flutter build ios --release --no-codesign
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*ios Build Check*"
          mention: "here"
          mention_if: "failure"
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
          url: ${{ secrets.SLACK_WEBHOOK }}
